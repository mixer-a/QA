Виды тестирования
     По объектам:
1)	Функциональное:
- функциональное тестирование
- GUI (тестирование элементов интерфейса(активное состояние/неактивное состояние))* 
- безопасность
2) Нефункциональное:
•	Безопасность: для детей, экологии; тестирование защищенности
•	Тестирование интерфейса (UI):
а) Внешний вид и профессиональность выполнения (не устаревший, соответствует заданию, не перегружен)
б) Соблюдение единого стиля
в) Интерфейс соответствует дизайну
г) Нет искажений
д) общий вид каждого экрана приложения
е) внешний вид каждого элемента интерфейса (цвет, размер, положение на экране, шрифт (стиль, размер, тип шрифта))
•	Юзабилити тестирования (UX):
а) Как быстро пользователь достигнет цели?
б) Как быстро вспоминать то, чему научился?
в) Размер кнопок (удобно ли попадать)
г) Часто ли пользователю надо выбирать
д) Большие ли списки
е) Порог вхождения:
     - насколько быстро научиться новичку
     - насколько быстро поймет опытный пользователь
•	Локализация (l10n):
а) Функционал:
- формат даты
-формат времени
- валюта
- региональные настройки
- часовой пояс
- календарь (буддистский, японский)
- начало недели
- формат бумаги
- система мер
- особенности имен
- сортировка
б) Региональные особенности:
- толкование текста, символов, знаков
- контроль символики и цветов
- правовые
- перевод на поддерживаемые языки
в) Контент:
- аудио, видео, изображения
- текст
- документация
г) Текст:
- смысловая нагрузка
- синтаксис
- грамматика
- пунктуация
- наличие текста
д) Интернационализация (i18n)
Подразумевает, что заранее предусмотрены такие вещи, что, например, когда вы будете делать локализацию под другую страну, вам не нужно будет ничего глобально перерабатывать. 
•	Конфигурационное – подразумевает разную конфигурацию у каждого из браузеров (например, режим инкогнито)
•	Совместимости – кроссбраузерное тестирование, на каждом браузере открываем сайт, и он должен выглядеть, как он должен выглядеть (операционные системы, устройства).
•	Инсталляционное:
     - установка
     - обновление 
     - удаление
•	Производительности:
     - нагрузочное (сайт спокойно выдерживает нагрузку, например, 10 тыс. обращений/час)
     - стрессовое (а 100 тыс./час он выдержит?)
     - стабильности (надежности) (может ли сайт с определенной нагрузкой работать в течении какого-то периода времени)
     - масштабируемости (можно ли масштабировать то, с чем мы работает, продукт потребляет 90% мощности ресурсов, которые есть у сервера, если поставить еще один процессор/ядро, теперь нагрузка стала 80%)
     - объемами (на сколько продукт может справляться с объемами информации) 
     - конкурентное (конкуренция между действиями, которые сейчас делает сервер)
•	Тестирование на отказ и восстановление (помехоустойчивость) (перепад напряжения, потеря интернет-связи, как быстро он восстановиться; магнитное излучение; звонок во время игры). 
•	Тестирование документации

Функциональное тестирование
Проверить все функции программы и сравнить фактический результат с ожидаемым
Требования => Входные данные => Выходные данные => Прохождение сценариев => Сравнение результатов

