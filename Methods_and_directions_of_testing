Методы тестирования 
Метод тестирования дает вам понять, на сколько глубоко вы можете погрузиться в техническую составляющую вашего продукта. Можете ли вы получить доступ к базе данных, к архитектуре проекта, к потоку хранения информации или ее передаче, можете ли вы получить доступ к коду, к кодовой базе и посмотреть, что находится там, на сколько глубоко вы можете погрузиться?
1.	Черный ящик говорит, что вы не можете, что вы не видите ничего и все, что у вас есть, это представление такое, как у пользователя, как пользователь пользуется программой, так вы ее и тестируете
2.	Белый ящик полная противоположность. Доступ везде, посмотреть код, протестировать код, дать рекомендации по исправлению. 
3.	Серый ящик – что-то среднее. Не имеете доступ к коду, но имеете доступ в другие технические области. Пример сайты и Developer Web Tools. Серый ящик подразумевает, что у вас есть доступ туда, куда нет доступа у пользователя (например, есть доступ в базу данных)
Направления тестирования
1.	Статическое тестирование – работа над предотвращением дефектов. Тестирование без запуска кода, приложения. Тестирование требований, проверка или обзор архитектуры проекта (должна быть документация об этой архитектуре, посмотреть все ли учтено, будет ли эта архитектура действительно работающей, есть ли в ней слабые места, которые могут привести к уязвимостям, особенно в плане безопасности). Проверка макета (дизайн). Посмотреть базу данных. Проверить туториал. Проверка тестовых данных. 
2.	Динамическое тестирование – запуск кода, программы. 
По степени удаленности
1.	Альфа – тестирование – продукт уже +/- готов, есть ошибки, но уже можно тестировать. 
2.	Бета – тестирование – альфа-тестирование уже пройдено и нужно проверить на более широкой аудитории. Запускают потенциальных пользователей. Бывает открытое и закрытое. Продукт готов, все работающее, на этом этапе желательно проверить моменты связанные с нагрузкой (1-2 недели, пара месяцев). 
По ожидаемому поведению
1.	Позитивное тестирование, когда применяются сценарии, которые соответствуют нормальному, ожидаемому поведению системы. Можно определить, что система делает то, для чего и была создана. 
2.	Негативное тестирование – применяются сценарии, которые соответствуют внештатному поведению системы.
